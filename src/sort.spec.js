describe("sort", function () {

    beforeEach(function () {
        this.shuffledDeck = ["♥4", "♠A", "♣6", "♥J", "♦6", "♦4", "♠K", "♣J", "♣2", "♣4", "♦3", "♥6", "♣9", "♦9", "♠8", "♥K", "♦8", "♦K", "♥5", "♠10", "♥7", "♠3", "♠2", "♣A", "♥3", "♥A", "♣8", "♦10", "♠7", "♦J", "♠9", "♣5", "♥8", "♣K", "♣Q", "♦5", "♥2", "♠6", "♦2", "♥10", "♣3", "♠5", "♥9", "♥Q", "♠Q", "♠J", "♦Q", "♦A", "♣7", "♦7", "♣10", "♠4"];
        this.doubleDeck = ["♥4", "♠A", "♣6", "♥J", "♦6", "♦4", "♠K", "♣J", "♣2", "♣4", "♦3", "♥6", "♣9", "♦9", "♠8", "♥K", "♦8", "♦K", "♥5", "♠10", "♥7", "♠3", "♠2", "♣A", "♥3", "♥A", "♣8", "♦10", "♠7", "♦J", "♠9", "♣5", "♥8", "♣K", "♣Q", "♦5", "♥2", "♠6", "♦2", "♥10", "♣3", "♠5", "♥9", "♥Q", "♠Q", "♠J", "♦Q", "♦A", "♣7", "♦7", "♣10", "♠4", "♥4", "♠A", "♣6", "♥J", "♦6", "♦4", "♠K", "♣J", "♣2", "♣4", "♦3", "♥6", "♣9", "♦9", "♠8", "♥K", "♦8", "♦K", "♥5", "♠10", "♥7", "♠3", "♠2", "♣A", "♥3", "♥A", "♣8", "♦10", "♠7", "♦J", "♠9", "♣5", "♥8", "♣K", "♣Q", "♦5", "♥2", "♠6", "♦2", "♥10", "♣3", "♠5", "♥9", "♥Q", "♠Q", "♠J", "♦Q", "♦A", "♣7", "♦7", "♣10", "♠4"];
        this.doubleIncompleteDeck = ["♣6", "♦6", "♦4", "♣J", "♣4", "♦3", "♣9", "♦9", "♠8", "♦8", "♦K", "♠10", "♠3", "♠2", "♣A", "♣8", "♦10", "♠7", "♦J", "♠9", "♣5", "♣K", "♣Q", "♦5", "♠6", "♦2", "♣3", "♠5", "♠Q", "♠J", "♦Q", "♦A", "♣7", "♦7", "♣10", "♠4", "♣6", "♦6", "♦4", "♣J", "♣4", "♦3", "♣9", "♦9", "♠8", "♦8", "♦K", "♠10", "♠3", "♠2", "♣A", "♣8", "♦10", "♠7", "♦J", "♠9", "♣5", "♣K", "♣Q", "♦5", "♠6", "♦2", "♣3", "♠5", "♠Q", "♠J", "♦Q", "♦A", "♣7", "♦7", "♣10", "♠4"];
        this.sortedDeck = "♠A;♠K;♠Q;♠J;♠10;♠9;♠8;♠7;♠6;♠5;♠4;♠3;♠2;♥A;♥K;♥Q;♥J;♥10;♥9;♥8;♥7;♥6;♥5;♥4;♥3;♥2;♦A;♦K;♦Q;♦J;♦10;♦9;♦8;♦7;♦6;♦5;♦4;♦3;♦2;♣A;♣K;♣Q;♣J;♣10;♣9;♣8;♣7;♣6;♣5;♣4;♣3;♣2".split(";");
        this.doubleSortedDeck = ["♠A", "♠A", "♠K", "♠K", "♠Q", "♠Q", "♠J", "♠J", "♠10", "♠10", "♠9", "♠9", "♠8", "♠8", "♠7", "♠7", "♠6", "♠6", "♠5", "♠5", "♠4", "♠4", "♠3", "♠3", "♠2", "♠2", "♥A", "♥A", "♥K", "♥K", "♥Q", "♥Q", "♥J", "♥J", "♥10", "♥10", "♥9", "♥9", "♥8", "♥8", "♥7", "♥7", "♥6", "♥6", "♥5", "♥5", "♥4", "♥4", "♥3", "♥3", "♥2", "♥2", "♦A", "♦A", "♦K", "♦K", "♦Q", "♦Q", "♦J", "♦J", "♦10", "♦10", "♦9", "♦9", "♦8", "♦8", "♦7", "♦7", "♦6", "♦6", "♦5", "♦5", "♦4", "♦4", "♦3", "♦3", "♦2", "♦2", "♣A", "♣A", "♣K", "♣K", "♣Q", "♣Q", "♣J", "♣J", "♣10", "♣10", "♣9", "♣9", "♣8", "♣8", "♣7", "♣7", "♣6", "♣6", "♣5", "♣5", "♣4", "♣4", "♣3", "♣3", "♣2", "♣2"];
        this.doubleIncompleteSortedDeck = ["♠Q", "♠Q", "♠J", "♠J", "♠10", "♠10", "♠9", "♠9", "♠8", "♠8", "♠7", "♠7", "♠6", "♠6", "♠5", "♠5", "♠4", "♠4", "♠3", "♠3", "♠2", "♠2", "♦A", "♦A", "♦K", "♦K", "♦Q", "♦Q", "♦J", "♦J", "♦10", "♦10", "♦9", "♦9", "♦8", "♦8", "♦7", "♦7", "♦6", "♦6", "♦5", "♦5", "♦4", "♦4", "♦3", "♦3", "♦2", "♦2", "♣A", "♣A", "♣K", "♣K", "♣Q", "♣Q", "♣J", "♣J", "♣10", "♣10", "♣9", "♣9", "♣8", "♣8", "♣7", "♣7", "♣6", "♣6", "♣5", "♣5", "♣4", "♣4", "♣3", "♣3"];
        this.miniDeck = ["♣5", "♠K", "♣10", "♠2", "♦7"];
        this.sortedMiniDeck = ["♠K", "♠2", "♦7", "♣10", "♣5"];
        this.bogusRandom = ["♣5", "♠K", "♣10", "♠2", "♦7", "♣5", "♠K", "♣10", "♠2", "♦7", "♣5", "♠K", "♣10", "♠2", "♦7", "♠A", "♠A", "♠A", "♠A",  "♠A",  "♠A",  "♠A", "♠A", "♠A", "♠A"];
        this.bogusSorted = ["♠A", "♠A", "♠A",  "♠A", "♠A", "♠A", "♠A", "♠A",  "♠A", "♠A", "♠K", "♠K", "♠K",  "♠2", "♠2", "♠2", "♦7", "♦7", "♦7", "♣10", "♣10", "♣10", "♣5", "♣5", "♣5"];
    });


    it("takes a random deck of cards and orders it from A to 2 and ♠ ♥ ♦ ♣", function () {
        expect(sort(this.shuffledDeck)).toEqual(this.sortedDeck);
    });

    it("takes an incomplete random deck of cards and orders it from A to 2 and ♠ ♥ ♦ ♣", function () {
        expect(sort(this.miniDeck)).toEqual(this.sortedMiniDeck);
    });

    it("takes two random decks of cards and orders it from A to 2 and ♠ ♥ ♦ ♣", function () {
        expect(sort(this.doubleDeck)).toEqual(this.doubleSortedDeck);
    });

    it("takes two incomplete random decks of cards and orders it from A to 2 and ♠ ♥ ♦ ♣", function () {
        expect(sort(this.doubleIncompleteDeck)).toEqual(this.doubleIncompleteSortedDeck);
    });

    it("takes a bunch of unrelated cards and orders it from A to 2 and ♠ ♥ ♦ ♣", function () {
        expect(sort(this.bogusRandom)).toEqual(this.bogusSorted);
    });

});